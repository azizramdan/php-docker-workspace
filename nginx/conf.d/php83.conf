server {
    listen 80;

    server_name ~^(?<domain>.*)-lv83\.test$;
    root /projects/${domain}/public;
    index index.php;

    # use docker's dns as fallback resolver
    resolver 127.0.0.11 valid=30s ipv6=off;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        include fastcgi_params;

        # use a variable for the upstream service to prevent failure if the service is down
        set $upstream php83:9000;
        fastcgi_pass $upstream;
        
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 600;
    }

    location ~ /\.ht {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    error_log /var/log/nginx/php83_error.log;
    # access_log /var/log/nginx/php83_access.log;
    access_log off;
}

server {
    listen 80;

    server_name ~^(?<domain>.*)-lv83-be\.test$;
    root /projects/${domain}/public;
    index index.php;

    # use docker's dns as fallback resolver
    resolver 127.0.0.11 valid=30s ipv6=off;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        include fastcgi_params;

        # use variable to set upstream to prevent exit when service does not up
        set $upstream php83:9000;
        fastcgi_pass $upstream;
        
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 600;
    }

    location ~ /\.ht {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    error_log /var/log/nginx/php83_error.log;
    # access_log /var/log/nginx/php83_access.log;
    access_log off;
}